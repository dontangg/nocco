[
   {
      "Name":"javascript",
      "FileExtension":".js",
      "CommentDefinitions": [
        {
            "StartsWith": "//",
            "EndsWith": "",
            "IgnoreRepeatingChars" : "true"
        },
        {
            "StartsWith": "/*",
            "EndsWith": "*/",
            "TrimFromStart":[ "*"],
            "IgnoreRepeatingChars" : "true"
        }
      ],
      "IgnoreFilenameEndings" : [],
      "MarkdownMaps":[
         {
            "FindPattern":"@constructor",
            "Replacement":"`constructor`\n"
         },
         {
            "FindPattern":"@deprecated",
            "Replacement":"`deprecated`\n"
         },
         {
            "FindPattern":"@override",
            "Replacement":"`overrides`\n"
         },
         {
            "FindPattern":"@define {([^}]+)}",
            "Replacement":"`$1`\n"
         },
         {
            "FindPattern":"@this {([^}]+)}",
            "Replacement":"keyword `this` refers to `$1`\n"
         },
         {
            "FindPattern":"@param {([^}]+)} ([^ ]+)[ ]*(.*)",
            "Replacement":"param `$2` type `$1` $3\n"
         },
         {
            "FindPattern":"@return {([^}]+)}[ ]*(.*)",
            "Replacement":"returns `$1` $2\n"
         }
      ]
   },
   {
      "Name":"typescript",
      "FileExtension":".ts",
      "CommentDefinitions": [
        {
            "StartsWith": "//",
            "EndsWith": "",
            "IgnoreRepeatingChars" : "true"
        },
        {
            "StartsWith": "/*",
            "EndsWith": "*/",
            "TrimFromStart":[ "*"],
            "IgnoreRepeatingChars" : "true"
        }
      ],
      "IgnoreFilenameEndings" : [],
      "MarkdownMaps":[
         {
            "FindPattern":"<[ ]*reference path[ ]*=[ ]*\\\"([^<]*)\\\"[ ]*\\/[ ]*?>",
            "Replacement":"references `$1`\n"
         },
         {
            "FindPattern":"@constructor",
            "Replacement":"`constructor`\n"
         },
         {
            "FindPattern":"@deprecated",
            "Replacement":"`deprecated`\n"
         },
         {
            "FindPattern":"@override",
            "Replacement":"`overrides`\n"
         },
         {
            "FindPattern":"@define {([^}]+)}",
            "Replacement":"`$1`\n"
         },
         {
            "FindPattern":"@this {([^}]+)}",
            "Replacement":"keyword `this` refers to `$1`\n"
         },
         {
            "FindPattern":"@param {([^}]+)} ([^ ]+)[ ]*(.*)",
            "Replacement":"param `$2` type `$1` $3\n"
         },
         {
            "FindPattern":"@return {([^}]+)}[ ]*(.*)",
            "Replacement":"returns `$1` $2\n"
         }
      ]
   },
   {
      "Name":"csharp",
      "FileExtension":".cs",
      "CommentDefinitions": [
        {
            "StartsWith": "//",
            "EndsWith": "",
            "IgnoreRepeatingChars" : "true"
        },
        {
            "StartsWith": "/*",
            "EndsWith": "*/",
            "TrimFromStart":[ "*"],
            "IgnoreRepeatingChars" : "true"
        }
      ],
      "IgnoreFilenameEndings" : ["AssemblyInfo.cs"],
      "IgnoreSubDirectories":[
         "bin",
         "obj"
      ],
      "MarkdownMaps":[
         {
            "FindPattern":"TODO:(.*)",
            "Replacement":"**TODO:$1**"
         },
         {
            "FindPattern":"<c>([^<]*)</c>",
            "Replacement":"`$1`"
         },
         {
            "FindPattern":"<param[^\\>]*>([^<]*)</param>",
            "Replacement":""
         },
         {
            "FindPattern":"<returns>([^<]*)</returns>",
            "Replacement":""
         },
         {
            "FindPattern":"<see[ ]*cref=\\\"([^\\\"]*)\\\"[ ]*/>",
            "Replacement":"see `$1`"
         },
         {
            "FindPattern":"(</?example>|</?summary>|</?remarks>)",
            "Replacement":""
         }
      ]
   },
   {
      "Name":"vb.net",
      "FileExtension":".vb",
      "CommentDefinitions": [
        {
            "StartsWith": "'",
            "EndsWith": "",
            "IgnoreRepeatingChars" : "true"
        }
      ],
      "IgnoreFilenameEndings" : [],
      "IgnoreSubDirectories":[
         "bin",
         "obj"
      ],
      "MarkdownMaps":[
         {
            "FindPattern":"<c>([^<]*)</c>",
            "Replacement":"`$1`"
         },
         {
            "FindPattern":"<param[^\\>]*>([^<]*)</param>",
            "Replacement":""
         },
         {
            "FindPattern":"<returns>([^<]*)</returns>",
            "Replacement":""
         },
         {
            "FindPattern":"<see[ ]*cref=",
            "Replacement":"see `$1`"
         },
         {
            "FindPattern":"(</?example>|</?summary>|</?remarks>)",
            "Replacement":""
         }
      ]
   }
]